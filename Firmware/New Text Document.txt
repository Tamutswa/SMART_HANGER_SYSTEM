#include <WiFi.h>
#include <WebServer.h>

const char* ssid = "GalaxyA34"; // Replace with your WiFi SSID
const char* password = "12345678"; // Replace with your WiFi password

const int ledPin = 18; // Change this to your desired pin (avoid 11!)
const int ledPin2 = 19;
const int ledPin3 = 17;
WebServer server(80);

void handleRoot() {
  String html = "<!DOCTYPE html><html><head><title>ESP32 LED Control</title></head><body>";
  html += "<h1>ESP32 LED Control</h1>";
  html += "<a href='/on'><button>ON</button></a>";
  html += "<a href='/off'><button>OFF</button></a>";
  html += "</body></html>";
  server.send(200, "text/html", html);
}

void handleOn() {
  digitalWrite(ledPin, HIGH);
  digitalWrite(ledPin2, HIGH);
   digitalWrite(ledPin3, HIGH);
}

void handleOff() {
  digitalWrite(ledPin, LOW);
  digitalWrite(ledPin2, LOW);
  digitalWrite(ledPin3, LOW);
}

void setup() {
  Serial.begin(921600);
  pinMode(ledPin, OUTPUT);
  digitalWrite(ledPin, LOW); // Initialize LED off
pinMode(ledPin2, OUTPUT);
  digitalWrite(ledPin2, LOW);
  pinMode(ledPin2, OUTPUT);
  digitalWrite(ledPin3, LOW);

  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }
  Serial.println("Connected to WiFi!");
  Serial.print("IP Address: ");
  Serial.println(WiFi.localIP());

  server.on("/", handleRoot);
  server.on("/on", handleOn);
  server.on("/off", handleOff);
  server.begin();
}

void loop() {
  server.handleClient();
}








SEARCH CODE 

#include <WiFi.h>
#include <WebServer.h>

const char* ssid = "GalaxyA34";
const char* password = "12345678";

const int ledPin1 = 18;
const int ledPin2 = 19;

WebServer server(80);

bool flashing = false;

void handleSearch() {
  flashing = true;
  server.send(200, "text/plain", "LEDs flashing continuously!");
}

void handleStop() {
  flashing = false;
  server.send(200, "text/plain", "LEDs stopped flashing.");
  digitalWrite(ledPin1, LOW); //Ensure the LEDs are off when stopping.
  digitalWrite(ledPin2, LOW);
}

void handleNotFound() {
  server.send(404, "text/plain", "Not found");
}

void setup() {
  Serial.begin(921600);
  pinMode(ledPin1, OUTPUT);
  pinMode(ledPin2, OUTPUT);

  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }
  Serial.println("Connected to WiFi");
  Serial.print("IP Address: ");
  Serial.println(WiFi.localIP());

  server.on("/search", handleSearch);
  server.on("/stop", handleStop); // Add the /stop endpoint
  server.onNotFound(handleNotFound);

  server.begin();
  Serial.println("Web server started");
}

void loop() {
  server.handleClient();

  if (flashing) {
    digitalWrite(ledPin1, HIGH);
    digitalWrite(ledPin2, HIGH);
    delay(500);
    digitalWrite(ledPin1, LOW);
    digitalWrite(ledPin2, LOW);
    delay(500);
  }
}


HTML SEARCH

<!DOCTYPE html>
<html>
<head>
    </head>
<body>
    <button onclick="searchHanger()">Search for Hanger</button>
    <script>
        // ... your existing JavaScript code ...

        function searchHanger() {
            var xhr = new XMLHttpRequest();
            var esp32IP = "192.168.251.10"; // Replace with your ESP32's IP address
            xhr.open("GET", "http://" + esp32IP + "/search", true);
            xhr.onload = function() {
                if (xhr.status >= 200 && xhr.status < 300) {
                    console.log("ESP32 response:", xhr.responseText);
                } else {
                    console.error("Error:", xhr.status, xhr.statusText);
                }
            };
            xhr.onerror = function() {
                console.error("Network error occurred.");
            };
            xhr.send();
        }
    </script>
</body>
</html>

  server.begin();
  Serial.println("Web server started");
}

void loop() {
  server.handleClient();
}